2025-06-06 13:06:46.264 +04:00 [FTL] Host terminated unexpectedly
System.InvalidOperationException: Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHealthChecks' inside the call to 'ConfigureServices(...)' in the application startup code.
   at Microsoft.AspNetCore.Builder.HealthCheckEndpointRouteBuilderExtensions.MapHealthChecksCore(IEndpointRouteBuilder endpoints, String pattern, HealthCheckOptions options)
   at Program.Main(String[] args) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Program.cs:line 226
2025-06-06 13:07:08.065 +04:00 [FTL] Host terminated unexpectedly
System.InvalidOperationException: Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHealthChecks' inside the call to 'ConfigureServices(...)' in the application startup code.
   at Microsoft.AspNetCore.Builder.HealthCheckEndpointRouteBuilderExtensions.MapHealthChecksCore(IEndpointRouteBuilder endpoints, String pattern, HealthCheckOptions options)
   at Program.Main(String[] args) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Program.cs:line 226
2025-06-06 13:07:23.511 +04:00 [FTL] Host terminated unexpectedly
System.InvalidOperationException: Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHealthChecks' inside the call to 'ConfigureServices(...)' in the application startup code.
   at Microsoft.AspNetCore.Builder.HealthCheckEndpointRouteBuilderExtensions.MapHealthChecksCore(IEndpointRouteBuilder endpoints, String pattern, HealthCheckOptions options)
   at Program.Main(String[] args) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Program.cs:line 226
2025-06-06 13:10:00.522 +04:00 [INF] Now listening on: http://localhost:5218
2025-06-06 13:10:01.306 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/swagger/index.html - null null
2025-06-06 13:10:01.360 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-06 13:10:01.419 +04:00 [INF] Hosting environment: Development
2025-06-06 13:10:01.439 +04:00 [INF] Content root path: D:\Sample\OnlineCourse.API\OnlineCourse.API
2025-06-06 13:10:01.524 +04:00 [INF] Request: GET /swagger/index.html
2025-06-06 13:10:01.735 +04:00 [INF] Response: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"OnlineCourse.API v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2025-06-06 13:10:01.842 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/swagger/index.html - 200 null text/html;charset=utf-8 608.487ms
2025-06-06 13:10:01.889 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/_vs/browserLink - null null
2025-06-06 13:10:02.404 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/_framework/aspnetcore-browser-refresh.js - null null
2025-06-06 13:10:02.436 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 32.156ms
2025-06-06 13:10:02.505 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/_vs/browserLink - 200 null text/javascript; charset=UTF-8 617.6831ms
2025-06-06 13:10:02.682 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/swagger/v1/swagger.json - null null
2025-06-06 13:10:02.700 +04:00 [INF] Request: GET /swagger/v1/swagger.json
2025-06-06 13:10:02.728 +04:00 [INF] Response: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "OnlineCourse.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Course": {
      "get": {
        "tags": [
          "Course"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/Category/{categoryId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/Detail/{courseId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CourseCategory/{id}": {
      "get": {
        "tags": [
          "CourseCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CourseCategory": {
      "get": {
        "tags": [
          "CourseCategory"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CourseCategoryModel": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CourseDetailModel": {
        "required": [
          "sessionDetails"
        ],
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "courseType": {
            "type": "string",
            "nullable": true
          },
          "seatsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorUserId": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/CourseCategoryModel"
          },
          "userRating": {
            "$ref": "#/components/schemas/UserRatingModel"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReviewModel"
            },
            "nullable": true
          },
          "sessionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionDetailModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CourseModel": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "courseType": {
            "type": "string",
            "nullable": true
          },
          "seatsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorUserId": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/CourseCategoryModel"
          },
          "userRating": {
            "$ref": "#/components/schemas/UserRatingModel"
          }
        },
        "additionalProperties": false
      },
      "SessionDetailModel": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "videoOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserRatingModel": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "totalRating": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserReviewModel": {
        "type": "object",
        "properties": {
          "reviewId": {
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2025-06-06 13:10:02.760 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 77.5676ms
2025-06-06 13:10:06.891 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course - null null
2025-06-06 13:10:06.900 +04:00 [INF] Request: GET /api/Course
2025-06-06 13:10:06.947 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API)'
2025-06-06 13:10:07.042 +04:00 [INF] Route matched with {action = "GetAllCourses", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[OnlineCourse.Core.Models.CourseModel]]] GetAllCoursesAsync() on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:10:08.431 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:10:19.136 +04:00 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [c].[Thumbnail], [i].[UserId] AS [InstructorUserId], [c].[StartDate], [c].[EndDate], [c0].[CategoryId], [c0].[CategoryName], [c0].[Description], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Review] AS [r]
        WHERE [c].[CourseId] = [r].[CourseId]) THEN CONVERT(decimal(18, 2), (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Review] AS [r0]
        WHERE [c].[CourseId] = [r0].[CourseId]))
    ELSE 0.0
END AS [AverageRating], (
    SELECT COUNT(*)
    FROM [Review] AS [r1]
    WHERE [c].[CourseId] = [r1].[CourseId]) AS [TotalRating]
FROM [Course] AS [c]
INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
2025-06-06 13:10:19.222 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10781.9356ms.
2025-06-06 13:10:19.242 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[OnlineCourse.Core.Models.CourseModel, OnlineCourse.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-06 13:10:19.287 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API) in 12222.6494ms
2025-06-06 13:10:19.296 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API)'
2025-06-06 13:10:19.308 +04:00 [INF] Response: 200: [{"courseId":1,"title":"Angular Full Course","description":"Comprehensive course covering Angular from basics to advanced topics.","price":199.99,"courseType":"Online","seatsAvailable":50,"duration":40.50,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-01T00:00:00","endDate":"2024-09-30T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":1,"averageRating":5.00,"totalRating":1}},{"courseId":2,"title":"Introduction to Data Science","description":"Learn the fundamentals of data science with hands-on examples.","price":149.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":2,"averageRating":4.00,"totalRating":1}},{"courseId":3,"title":"Graphic Design Mastery","description":"Master the art of graphic design with practical projects.","price":129.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":3,"averageRating":5.00,"totalRating":1}},{"courseId":4,"title":"Full Stack Web Development","description":"Learn to build web applications from scratch using modern technologies.","price":249.99,"courseType":"Online","seatsAvailable":40,"duration":50.00,"categoryId":4,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-11-30T00:00:00","category":{"categoryId":4,"categoryName":"Web Development","description":"Courses focusing on front-end and back-end web development."},"userRating":{"courseId":4,"averageRating":5.00,"totalRating":1}},{"courseId":5,"title":"Ethical Hacking Basics","description":"Introduction to ethical hacking and cybersecurity fundamentals.","price":199.99,"courseType":"Online","seatsAvailable":35,"duration":40.00,"categoryId":5,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-11-30T00:00:00","category":{"categoryId":5,"categoryName":"Cybersecurity","description":"Courses covering security practices and ethical hacking."},"userRating":{"courseId":5,"averageRating":4.00,"totalRating":1}},{"courseId":6,"title":"Agile Project Management","description":"Master the principles of Agile and Scrum.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":6,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":6,"categoryName":"Project Management","description":"Courses on managing projects, teams, and resources effectively."},"userRating":{"courseId":6,"averageRating":5.00,"totalRating":1}},{"courseId":7,"title":"Digital Marketing Mastery","description":"Become an expert in digital marketing with this comprehensive course.","price":219.99,"courseType":"Online","seatsAvailable":30,"duration":35.00,"categoryId":7,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-12-01T00:00:00","category":{"categoryId":7,"categoryName":"Marketing","description":"Courses focused on digital marketing, SEO, and social media marketing."},"userRating":{"courseId":7,"averageRating":5.00,"totalRating":1}},{"courseId":8,"title":"Personal Finance Essentials","description":"Learn how to manage your finances and make smart investments.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":8,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":8,"categoryName":"Finance","description":"Courses covering investment, personal finance, and accounting."},"userRating":{"courseId":8,"averageRating":4.00,"totalRating":1}},{"courseId":9,"title":"Yoga for Beginners","description":"Start your journey to physical and mental wellness with yoga.","price":99.99,"courseType":"Online","seatsAvailable":20,"duration":15.00,"categoryId":9,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-11-15T00:00:00","category":{"categoryId":9,"categoryName":"Health & Fitness","description":"Courses on physical fitness, mental well-being, and nutrition."},"userRating":{"courseId":9,"averageRating":5.00,"totalRating":1}},{"courseId":10,"title":"Full Stack Web Development","description":"Learn to build complete web applications using HTML, CSS, JavaScript, and backend technologies.","price":249.99,"courseType":"Online","seatsAvailable":75,"duration":60.00,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-12-01T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":10,"averageRating":0.00,"totalRating":0}},{"courseId":11,"title":"Advanced Data Science Techniques","description":"Dive deep into advanced techniques in data science, including deep learning and AI.","price":299.99,"courseType":"Online","seatsAvailable":50,"duration":45.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-12-31T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":11,"averageRating":0.00,"totalRating":0}},{"courseId":12,"title":"UI/UX Design Fundamentals","description":"Learn the essentials of user interface and user experience design.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-10-15T00:00:00","endDate":"2024-11-15T00:00:00","category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":12,"averageRating":0.00,"totalRating":0}},{"courseId":13,"title":"Python for Data Analysis","description":"Learn how to use Python for data analysis, visualization, and statistical modeling.","price":159.99,"courseType":"Online","seatsAvailable":60,"duration":35.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-15T00:00:00","endDate":"2024-10-15T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":13,"averageRating":0.00,"totalRating":0}},{"courseId":14,"title":"Digital Marketing Masterclass","description":"Comprehensive guide to mastering digital marketing strategies.","price":199.99,"courseType":"Online","seatsAvailable":40,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-12-01T00:00:00","endDate":"2024-12-31T00:00:00","category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":14,"averageRating":0.00,"totalRating":0}}]
2025-06-06 13:10:19.347 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course - 200 null application/json; charset=utf-8 12455.587ms
2025-06-06 13:10:21.236 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course - null null
2025-06-06 13:10:21.279 +04:00 [INF] Request: GET /api/Course
2025-06-06 13:10:21.289 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API)'
2025-06-06 13:10:21.298 +04:00 [INF] Route matched with {action = "GetAllCourses", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[OnlineCourse.Core.Models.CourseModel]]] GetAllCoursesAsync() on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:10:21.312 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:10:21.560 +04:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [c].[Thumbnail], [i].[UserId] AS [InstructorUserId], [c].[StartDate], [c].[EndDate], [c0].[CategoryId], [c0].[CategoryName], [c0].[Description], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Review] AS [r]
        WHERE [c].[CourseId] = [r].[CourseId]) THEN CONVERT(decimal(18, 2), (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Review] AS [r0]
        WHERE [c].[CourseId] = [r0].[CourseId]))
    ELSE 0.0
END AS [AverageRating], (
    SELECT COUNT(*)
    FROM [Review] AS [r1]
    WHERE [c].[CourseId] = [r1].[CourseId]) AS [TotalRating]
FROM [Course] AS [c]
INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
2025-06-06 13:10:21.578 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 258.5284ms.
2025-06-06 13:10:21.585 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[OnlineCourse.Core.Models.CourseModel, OnlineCourse.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-06 13:10:21.593 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API) in 284.9114ms
2025-06-06 13:10:21.599 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesAsync (OnlineCourse.API)'
2025-06-06 13:10:21.613 +04:00 [INF] Response: 200: [{"courseId":1,"title":"Angular Full Course","description":"Comprehensive course covering Angular from basics to advanced topics.","price":199.99,"courseType":"Online","seatsAvailable":50,"duration":40.50,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-01T00:00:00","endDate":"2024-09-30T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":1,"averageRating":5.00,"totalRating":1}},{"courseId":2,"title":"Introduction to Data Science","description":"Learn the fundamentals of data science with hands-on examples.","price":149.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":2,"averageRating":4.00,"totalRating":1}},{"courseId":3,"title":"Graphic Design Mastery","description":"Master the art of graphic design with practical projects.","price":129.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":3,"averageRating":5.00,"totalRating":1}},{"courseId":4,"title":"Full Stack Web Development","description":"Learn to build web applications from scratch using modern technologies.","price":249.99,"courseType":"Online","seatsAvailable":40,"duration":50.00,"categoryId":4,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-11-30T00:00:00","category":{"categoryId":4,"categoryName":"Web Development","description":"Courses focusing on front-end and back-end web development."},"userRating":{"courseId":4,"averageRating":5.00,"totalRating":1}},{"courseId":5,"title":"Ethical Hacking Basics","description":"Introduction to ethical hacking and cybersecurity fundamentals.","price":199.99,"courseType":"Online","seatsAvailable":35,"duration":40.00,"categoryId":5,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-11-30T00:00:00","category":{"categoryId":5,"categoryName":"Cybersecurity","description":"Courses covering security practices and ethical hacking."},"userRating":{"courseId":5,"averageRating":4.00,"totalRating":1}},{"courseId":6,"title":"Agile Project Management","description":"Master the principles of Agile and Scrum.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":6,"instructorId":2,"instructorUserId":5,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":6,"categoryName":"Project Management","description":"Courses on managing projects, teams, and resources effectively."},"userRating":{"courseId":6,"averageRating":5.00,"totalRating":1}},{"courseId":7,"title":"Digital Marketing Mastery","description":"Become an expert in digital marketing with this comprehensive course.","price":219.99,"courseType":"Online","seatsAvailable":30,"duration":35.00,"categoryId":7,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-12-01T00:00:00","category":{"categoryId":7,"categoryName":"Marketing","description":"Courses focused on digital marketing, SEO, and social media marketing."},"userRating":{"courseId":7,"averageRating":5.00,"totalRating":1}},{"courseId":8,"title":"Personal Finance Essentials","description":"Learn how to manage your finances and make smart investments.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":8,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":8,"categoryName":"Finance","description":"Courses covering investment, personal finance, and accounting."},"userRating":{"courseId":8,"averageRating":4.00,"totalRating":1}},{"courseId":9,"title":"Yoga for Beginners","description":"Start your journey to physical and mental wellness with yoga.","price":99.99,"courseType":"Online","seatsAvailable":20,"duration":15.00,"categoryId":9,"instructorId":3,"instructorUserId":8,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-11-15T00:00:00","category":{"categoryId":9,"categoryName":"Health & Fitness","description":"Courses on physical fitness, mental well-being, and nutrition."},"userRating":{"courseId":9,"averageRating":5.00,"totalRating":1}},{"courseId":10,"title":"Full Stack Web Development","description":"Learn to build complete web applications using HTML, CSS, JavaScript, and backend technologies.","price":249.99,"courseType":"Online","seatsAvailable":75,"duration":60.00,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-10-01T00:00:00","endDate":"2024-12-01T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":10,"averageRating":0.00,"totalRating":0}},{"courseId":11,"title":"Advanced Data Science Techniques","description":"Dive deep into advanced techniques in data science, including deep learning and AI.","price":299.99,"courseType":"Online","seatsAvailable":50,"duration":45.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-12-31T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":11,"averageRating":0.00,"totalRating":0}},{"courseId":12,"title":"UI/UX Design Fundamentals","description":"Learn the essentials of user interface and user experience design.","price":179.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-10-15T00:00:00","endDate":"2024-11-15T00:00:00","category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":12,"averageRating":0.00,"totalRating":0}},{"courseId":13,"title":"Python for Data Analysis","description":"Learn how to use Python for data analysis, visualization, and statistical modeling.","price":159.99,"courseType":"Online","seatsAvailable":60,"duration":35.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-15T00:00:00","endDate":"2024-10-15T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":13,"averageRating":0.00,"totalRating":0}},{"courseId":14,"title":"Digital Marketing Masterclass","description":"Comprehensive guide to mastering digital marketing strategies.","price":199.99,"courseType":"Online","seatsAvailable":40,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-12-01T00:00:00","endDate":"2024-12-31T00:00:00","category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":14,"averageRating":0.00,"totalRating":0}}]
2025-06-06 13:10:21.630 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course - 200 null application/json; charset=utf-8 393.6217ms
2025-06-06 13:10:31.822 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course/Category/2 - null null
2025-06-06 13:10:31.830 +04:00 [INF] Request: GET /api/Course/Category/2
2025-06-06 13:10:31.843 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesByCategoryIdAsync (OnlineCourse.API)'
2025-06-06 13:10:31.863 +04:00 [INF] Route matched with {action = "GetAllCoursesByCategoryId", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[OnlineCourse.Core.Models.CourseModel]]] GetAllCoursesByCategoryIdAsync(Int32) on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:10:31.885 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesByCategoryIdAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:10:32.289 +04:00 [INF] Executed DbCommand (351ms) [Parameters=[@__categoryId_Value_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [c].[Thumbnail], [i].[UserId] AS [InstructorUserId], [c].[StartDate], [c].[EndDate], [c0].[CategoryId], [c0].[CategoryName], [c0].[Description], CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Review] AS [r]
        WHERE [c].[CourseId] = [r].[CourseId]) THEN CONVERT(decimal(18, 2), (
        SELECT AVG(CAST([r0].[Rating] AS float))
        FROM [Review] AS [r0]
        WHERE [c].[CourseId] = [r0].[CourseId]))
    ELSE 0.0
END AS [AverageRating], (
    SELECT COUNT(*)
    FROM [Review] AS [r1]
    WHERE [c].[CourseId] = [r1].[CourseId]) AS [TotalRating]
FROM [Course] AS [c]
INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
WHERE [c].[CategoryId] = @__categoryId_Value_0
2025-06-06 13:10:32.300 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetAllCoursesByCategoryIdAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 407.2803ms.
2025-06-06 13:10:32.311 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[OnlineCourse.Core.Models.CourseModel, OnlineCourse.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-06 13:10:32.322 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetAllCoursesByCategoryIdAsync (OnlineCourse.API) in 452.6848ms
2025-06-06 13:10:32.331 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetAllCoursesByCategoryIdAsync (OnlineCourse.API)'
2025-06-06 13:10:32.339 +04:00 [INF] Response: 200: [{"courseId":2,"title":"Introduction to Data Science","description":"Learn the fundamentals of data science with hands-on examples.","price":149.99,"courseType":"Offline","seatsAvailable":null,"duration":30.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":2,"averageRating":4.00,"totalRating":1}},{"courseId":11,"title":"Advanced Data Science Techniques","description":"Dive deep into advanced techniques in data science, including deep learning and AI.","price":299.99,"courseType":"Online","seatsAvailable":50,"duration":45.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-11-01T00:00:00","endDate":"2024-12-31T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":11,"averageRating":0.00,"totalRating":0}},{"courseId":13,"title":"Python for Data Analysis","description":"Learn how to use Python for data analysis, visualization, and statistical modeling.","price":159.99,"courseType":"Online","seatsAvailable":60,"duration":35.00,"categoryId":2,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-15T00:00:00","endDate":"2024-10-15T00:00:00","category":{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},"userRating":{"courseId":13,"averageRating":0.00,"totalRating":0}}]
2025-06-06 13:10:32.348 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course/Category/2 - 200 null application/json; charset=utf-8 525.6821ms
2025-06-06 13:10:44.123 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course/Detail/3 - null null
2025-06-06 13:10:44.147 +04:00 [INF] Request: GET /api/Course/Detail/3
2025-06-06 13:10:44.162 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:10:44.177 +04:00 [INF] Route matched with {action = "GetCourseDetail", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[OnlineCourse.Core.Models.CourseDetailModel]] GetCourseDetailAsync(Int32) on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:10:44.191 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:10:44.318 +04:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-06-06 13:10:44.684 +04:00 [INF] Executed DbCommand (298ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s0].[CourseId], [s0].[Title], [s0].[Description], [s0].[Price], [s0].[CourseType], [s0].[SeatsAvailable], [s0].[Duration], [s0].[CategoryId], [s0].[InstructorId], [s0].[UserId], [s0].[StartDate], [s0].[EndDate], [s0].[Thumbnail], [s0].[CategoryId0], [s0].[CategoryName], [s0].[Description0], [s0].[InstructorId0], [s1].[CourseId], [s1].[ReviewId], [s1].[UserId], [s1].[UserName], [s1].[Rating], [s1].[Comments], [s1].[ReviewDate], [s1].[UserId0], [s].[SessionId], [s].[CourseId], [s].[Title], [s].[Description], [s].[VideoUrl], [s].[VideoOrder], [s0].[c], [s0].[c0]
FROM (
    SELECT TOP(1) [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [i].[UserId], [c].[StartDate], [c].[EndDate], [c].[Thumbnail], [c0].[CategoryId] AS [CategoryId0], [c0].[CategoryName], [c0].[Description] AS [Description0], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Review] AS [r1]
            WHERE [c].[CourseId] = [r1].[CourseId]) THEN CONVERT(decimal(18, 2), (
            SELECT AVG(CAST([r2].[Rating] AS float))
            FROM [Review] AS [r2]
            WHERE [c].[CourseId] = [r2].[CourseId]))
        ELSE 0.0
    END AS [c], (
        SELECT COUNT(*)
        FROM [Review] AS [r3]
        WHERE [c].[CourseId] = [r3].[CourseId]) AS [c0], [i].[InstructorId] AS [InstructorId0]
    FROM [Course] AS [c]
    INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
    INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
    WHERE [c].[CourseId] = @__courseId_0
) AS [s0]
OUTER APPLY (
    SELECT [r0].[CourseId], [r0].[ReviewId], [r0].[UserId], [u].[DisplayName] AS [UserName], [r0].[Rating], [r0].[Comments], [r0].[ReviewDate], [u].[UserId] AS [UserId0]
    FROM (
        SELECT TOP(10) [r].[ReviewId], [r].[Comments], [r].[CourseId], [r].[Rating], [r].[ReviewDate], [r].[UserId]
        FROM [Review] AS [r]
        WHERE [s0].[CourseId] = [r].[CourseId]
        ORDER BY [r].[Rating] DESC
    ) AS [r0]
    INNER JOIN [UserProfile] AS [u] ON [r0].[UserId] = [u].[UserId]
) AS [s1]
LEFT JOIN [SessionDetails] AS [s] ON [s0].[CourseId] = [s].[CourseId]
ORDER BY [s0].[CourseId], [s0].[InstructorId0], [s0].[CategoryId0], [s1].[Rating] DESC, [s1].[ReviewId], [s1].[UserId0], [s].[VideoOrder]
2025-06-06 13:10:44.717 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 520.4803ms.
2025-06-06 13:10:44.725 +04:00 [INF] Executing OkObjectResult, writing value of type 'OnlineCourse.Core.Models.CourseDetailModel'.
2025-06-06 13:10:44.744 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) in 559.1548ms
2025-06-06 13:10:44.749 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:10:44.758 +04:00 [INF] Response: 200: {"reviews":[{"reviewId":3,"courseId":3,"userId":1,"userName":"John Doe","rating":5,"comments":"Loved the hands-on projects and practical examples.","reviewDate":"2025-06-06T07:36:31.473"}],"sessionDetails":[{"sessionId":8,"courseId":3,"title":"Introduction to Graphic Design","description":"Overview of graphic design principles.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":1},{"sessionId":9,"courseId":3,"title":"Typography and Layout","description":"Learn the importance of typography and layout in design.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":2},{"sessionId":10,"courseId":3,"title":"Advanced Photoshop Techniques","description":"Master advanced techniques in Adobe Photoshop.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":3}],"courseId":3,"title":"Graphic Design Mastery","description":"Master the art of graphic design with practical projects.","price":129.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":3,"averageRating":5.00,"totalRating":1}}
2025-06-06 13:10:44.766 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course/Detail/3 - 200 null application/json; charset=utf-8 642.6893ms
2025-06-06 13:16:50.703 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course/Detail/3 - null null
2025-06-06 13:16:50.715 +04:00 [INF] Request: GET /api/Course/Detail/3
2025-06-06 13:16:50.725 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:16:50.736 +04:00 [INF] Route matched with {action = "GetCourseDetail", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[OnlineCourse.Core.Models.CourseDetailModel]] GetCourseDetailAsync(Int32) on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:16:50.743 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:16:52.275 +04:00 [INF] Executed DbCommand (247ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s0].[CourseId], [s0].[Title], [s0].[Description], [s0].[Price], [s0].[CourseType], [s0].[SeatsAvailable], [s0].[Duration], [s0].[CategoryId], [s0].[InstructorId], [s0].[UserId], [s0].[StartDate], [s0].[EndDate], [s0].[Thumbnail], [s0].[CategoryId0], [s0].[CategoryName], [s0].[Description0], [s0].[InstructorId0], [s1].[CourseId], [s1].[ReviewId], [s1].[UserId], [s1].[UserName], [s1].[Rating], [s1].[Comments], [s1].[ReviewDate], [s1].[UserId0], [s].[SessionId], [s].[CourseId], [s].[Title], [s].[Description], [s].[VideoUrl], [s].[VideoOrder], [s0].[c], [s0].[c0]
FROM (
    SELECT TOP(1) [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [i].[UserId], [c].[StartDate], [c].[EndDate], [c].[Thumbnail], [c0].[CategoryId] AS [CategoryId0], [c0].[CategoryName], [c0].[Description] AS [Description0], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Review] AS [r1]
            WHERE [c].[CourseId] = [r1].[CourseId]) THEN CONVERT(decimal(18, 2), (
            SELECT AVG(CAST([r2].[Rating] AS float))
            FROM [Review] AS [r2]
            WHERE [c].[CourseId] = [r2].[CourseId]))
        ELSE 0.0
    END AS [c], (
        SELECT COUNT(*)
        FROM [Review] AS [r3]
        WHERE [c].[CourseId] = [r3].[CourseId]) AS [c0], [i].[InstructorId] AS [InstructorId0]
    FROM [Course] AS [c]
    INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
    INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
    WHERE [c].[CourseId] = @__courseId_0
) AS [s0]
OUTER APPLY (
    SELECT [r0].[CourseId], [r0].[ReviewId], [r0].[UserId], [u].[DisplayName] AS [UserName], [r0].[Rating], [r0].[Comments], [r0].[ReviewDate], [u].[UserId] AS [UserId0]
    FROM (
        SELECT TOP(10) [r].[ReviewId], [r].[Comments], [r].[CourseId], [r].[Rating], [r].[ReviewDate], [r].[UserId]
        FROM [Review] AS [r]
        WHERE [s0].[CourseId] = [r].[CourseId]
        ORDER BY [r].[Rating] DESC
    ) AS [r0]
    INNER JOIN [UserProfile] AS [u] ON [r0].[UserId] = [u].[UserId]
) AS [s1]
LEFT JOIN [SessionDetails] AS [s] ON [s0].[CourseId] = [s].[CourseId]
ORDER BY [s0].[CourseId], [s0].[InstructorId0], [s0].[CategoryId0], [s1].[Rating] DESC, [s1].[ReviewId], [s1].[UserId0], [s].[VideoOrder]
2025-06-06 13:16:52.371 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1616.4169ms.
2025-06-06 13:16:52.386 +04:00 [INF] Executing OkObjectResult, writing value of type 'OnlineCourse.Core.Models.CourseDetailModel'.
2025-06-06 13:16:52.394 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) in 1651.1795ms
2025-06-06 13:16:52.429 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:16:52.438 +04:00 [INF] Response: 200: {"reviews":[{"reviewId":3,"courseId":3,"userId":1,"userName":"John Doe","rating":5,"comments":"Loved the hands-on projects and practical examples.","reviewDate":"2025-06-06T07:36:31.473"}],"sessionDetails":[{"sessionId":8,"courseId":3,"title":"Introduction to Graphic Design","description":"Overview of graphic design principles.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":1},{"sessionId":9,"courseId":3,"title":"Typography and Layout","description":"Learn the importance of typography and layout in design.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":2},{"sessionId":10,"courseId":3,"title":"Advanced Photoshop Techniques","description":"Master advanced techniques in Adobe Photoshop.","videoUrl":"https://www.youtube.com/watch?v=fqI0ToX1nDQ","videoOrder":3}],"courseId":3,"title":"Graphic Design Mastery","description":"Master the art of graphic design with practical projects.","price":129.99,"courseType":"Offline","seatsAvailable":null,"duration":25.00,"categoryId":3,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":null,"endDate":null,"category":{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},"userRating":{"courseId":3,"averageRating":5.00,"totalRating":1}}
2025-06-06 13:16:52.447 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course/Detail/3 - 200 null application/json; charset=utf-8 1744.15ms
2025-06-06 13:16:55.604 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course/Detail/1 - null null
2025-06-06 13:16:55.611 +04:00 [INF] Request: GET /api/Course/Detail/1
2025-06-06 13:16:55.622 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:16:55.627 +04:00 [INF] Route matched with {action = "GetCourseDetail", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[OnlineCourse.Core.Models.CourseDetailModel]] GetCourseDetailAsync(Int32) on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:16:55.637 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:16:55.889 +04:00 [INF] Executed DbCommand (244ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s0].[CourseId], [s0].[Title], [s0].[Description], [s0].[Price], [s0].[CourseType], [s0].[SeatsAvailable], [s0].[Duration], [s0].[CategoryId], [s0].[InstructorId], [s0].[UserId], [s0].[StartDate], [s0].[EndDate], [s0].[Thumbnail], [s0].[CategoryId0], [s0].[CategoryName], [s0].[Description0], [s0].[InstructorId0], [s1].[CourseId], [s1].[ReviewId], [s1].[UserId], [s1].[UserName], [s1].[Rating], [s1].[Comments], [s1].[ReviewDate], [s1].[UserId0], [s].[SessionId], [s].[CourseId], [s].[Title], [s].[Description], [s].[VideoUrl], [s].[VideoOrder], [s0].[c], [s0].[c0]
FROM (
    SELECT TOP(1) [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [i].[UserId], [c].[StartDate], [c].[EndDate], [c].[Thumbnail], [c0].[CategoryId] AS [CategoryId0], [c0].[CategoryName], [c0].[Description] AS [Description0], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Review] AS [r1]
            WHERE [c].[CourseId] = [r1].[CourseId]) THEN CONVERT(decimal(18, 2), (
            SELECT AVG(CAST([r2].[Rating] AS float))
            FROM [Review] AS [r2]
            WHERE [c].[CourseId] = [r2].[CourseId]))
        ELSE 0.0
    END AS [c], (
        SELECT COUNT(*)
        FROM [Review] AS [r3]
        WHERE [c].[CourseId] = [r3].[CourseId]) AS [c0], [i].[InstructorId] AS [InstructorId0]
    FROM [Course] AS [c]
    INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
    INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
    WHERE [c].[CourseId] = @__courseId_0
) AS [s0]
OUTER APPLY (
    SELECT [r0].[CourseId], [r0].[ReviewId], [r0].[UserId], [u].[DisplayName] AS [UserName], [r0].[Rating], [r0].[Comments], [r0].[ReviewDate], [u].[UserId] AS [UserId0]
    FROM (
        SELECT TOP(10) [r].[ReviewId], [r].[Comments], [r].[CourseId], [r].[Rating], [r].[ReviewDate], [r].[UserId]
        FROM [Review] AS [r]
        WHERE [s0].[CourseId] = [r].[CourseId]
        ORDER BY [r].[Rating] DESC
    ) AS [r0]
    INNER JOIN [UserProfile] AS [u] ON [r0].[UserId] = [u].[UserId]
) AS [s1]
LEFT JOIN [SessionDetails] AS [s] ON [s0].[CourseId] = [s].[CourseId]
ORDER BY [s0].[CourseId], [s0].[InstructorId0], [s0].[CategoryId0], [s1].[Rating] DESC, [s1].[ReviewId], [s1].[UserId0], [s].[VideoOrder]
2025-06-06 13:16:55.923 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 279.0704ms.
2025-06-06 13:16:55.938 +04:00 [INF] Executing OkObjectResult, writing value of type 'OnlineCourse.Core.Models.CourseDetailModel'.
2025-06-06 13:16:55.946 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API) in 309.5308ms
2025-06-06 13:16:55.957 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseDetailAsync (OnlineCourse.API)'
2025-06-06 13:16:55.968 +04:00 [INF] Response: 200: {"reviews":[{"reviewId":1,"courseId":1,"userId":3,"userName":"Alice Johnson","rating":5,"comments":"Excellent course, highly recommended!","reviewDate":"2025-06-06T07:36:31.473"}],"sessionDetails":[{"sessionId":1,"courseId":1,"title":"Introduction to Angular","description":"Overview of Angular and its core concepts.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":1},{"sessionId":2,"courseId":1,"title":"Angular Components","description":"Deep dive into Angular components.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":2},{"sessionId":3,"courseId":1,"title":"Angular Services and Dependency Injection","description":"Learn how to create and use services in Angular.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":3},{"sessionId":4,"courseId":1,"title":"Routing in Angular","description":"Understanding routing and navigation in Angular.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":4}],"courseId":1,"title":"Angular Full Course","description":"Comprehensive course covering Angular from basics to advanced topics.","price":199.99,"courseType":"Online","seatsAvailable":50,"duration":40.50,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-01T00:00:00","endDate":"2024-09-30T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":1,"averageRating":5.00,"totalRating":1}}
2025-06-06 13:16:55.977 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course/Detail/1 - 200 null application/json; charset=utf-8 373.7006ms
2025-06-06 13:17:03.917 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/Course/1 - null null
2025-06-06 13:17:03.925 +04:00 [INF] Request: GET /api/Course/1
2025-06-06 13:17:03.937 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseById (OnlineCourse.API)'
2025-06-06 13:17:03.947 +04:00 [INF] Route matched with {action = "GetCourseById", controller = "Course"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourseById(Int32) on controller OnlineCourse.API.Controllers.CourseController (OnlineCourse.API).
2025-06-06 13:17:03.958 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseController.GetCourseById (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:17:04.214 +04:00 [INF] Executed DbCommand (243ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s0].[CourseId], [s0].[Title], [s0].[Description], [s0].[Price], [s0].[CourseType], [s0].[SeatsAvailable], [s0].[Duration], [s0].[CategoryId], [s0].[InstructorId], [s0].[UserId], [s0].[StartDate], [s0].[EndDate], [s0].[Thumbnail], [s0].[CategoryId0], [s0].[CategoryName], [s0].[Description0], [s0].[InstructorId0], [s1].[CourseId], [s1].[ReviewId], [s1].[UserId], [s1].[UserName], [s1].[Rating], [s1].[Comments], [s1].[ReviewDate], [s1].[UserId0], [s].[SessionId], [s].[CourseId], [s].[Title], [s].[Description], [s].[VideoUrl], [s].[VideoOrder], [s0].[c], [s0].[c0]
FROM (
    SELECT TOP(1) [c].[CourseId], [c].[Title], [c].[Description], [c].[Price], [c].[CourseType], [c].[SeatsAvailable], [c].[Duration], [c].[CategoryId], [c].[InstructorId], [i].[UserId], [c].[StartDate], [c].[EndDate], [c].[Thumbnail], [c0].[CategoryId] AS [CategoryId0], [c0].[CategoryName], [c0].[Description] AS [Description0], CASE
        WHEN EXISTS (
            SELECT 1
            FROM [Review] AS [r1]
            WHERE [c].[CourseId] = [r1].[CourseId]) THEN CONVERT(decimal(18, 2), (
            SELECT AVG(CAST([r2].[Rating] AS float))
            FROM [Review] AS [r2]
            WHERE [c].[CourseId] = [r2].[CourseId]))
        ELSE 0.0
    END AS [c], (
        SELECT COUNT(*)
        FROM [Review] AS [r3]
        WHERE [c].[CourseId] = [r3].[CourseId]) AS [c0], [i].[InstructorId] AS [InstructorId0]
    FROM [Course] AS [c]
    INNER JOIN [Instructor] AS [i] ON [c].[InstructorId] = [i].[InstructorId]
    INNER JOIN [CourseCategory] AS [c0] ON [c].[CategoryId] = [c0].[CategoryId]
    WHERE [c].[CourseId] = @__courseId_0
) AS [s0]
OUTER APPLY (
    SELECT [r0].[CourseId], [r0].[ReviewId], [r0].[UserId], [u].[DisplayName] AS [UserName], [r0].[Rating], [r0].[Comments], [r0].[ReviewDate], [u].[UserId] AS [UserId0]
    FROM (
        SELECT TOP(10) [r].[ReviewId], [r].[Comments], [r].[CourseId], [r].[Rating], [r].[ReviewDate], [r].[UserId]
        FROM [Review] AS [r]
        WHERE [s0].[CourseId] = [r].[CourseId]
        ORDER BY [r].[Rating] DESC
    ) AS [r0]
    INNER JOIN [UserProfile] AS [u] ON [r0].[UserId] = [u].[UserId]
) AS [s1]
LEFT JOIN [SessionDetails] AS [s] ON [s0].[CourseId] = [s].[CourseId]
ORDER BY [s0].[CourseId], [s0].[InstructorId0], [s0].[CategoryId0], [s1].[Rating] DESC, [s1].[ReviewId], [s1].[UserId0], [s].[VideoOrder]
2025-06-06 13:17:04.247 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseController.GetCourseById (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 278.792ms.
2025-06-06 13:17:04.254 +04:00 [INF] Executing OkObjectResult, writing value of type 'OnlineCourse.Core.Models.CourseDetailModel'.
2025-06-06 13:17:04.261 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseController.GetCourseById (OnlineCourse.API) in 303.3008ms
2025-06-06 13:17:04.269 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseController.GetCourseById (OnlineCourse.API)'
2025-06-06 13:17:04.276 +04:00 [INF] Response: 200: {"reviews":[{"reviewId":1,"courseId":1,"userId":3,"userName":"Alice Johnson","rating":5,"comments":"Excellent course, highly recommended!","reviewDate":"2025-06-06T07:36:31.473"}],"sessionDetails":[{"sessionId":1,"courseId":1,"title":"Introduction to Angular","description":"Overview of Angular and its core concepts.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":1},{"sessionId":2,"courseId":1,"title":"Angular Components","description":"Deep dive into Angular components.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":2},{"sessionId":3,"courseId":1,"title":"Angular Services and Dependency Injection","description":"Learn how to create and use services in Angular.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":3},{"sessionId":4,"courseId":1,"title":"Routing in Angular","description":"Understanding routing and navigation in Angular.","videoUrl":"https://www.youtube.com/watch?v=70q8PanGbnw","videoOrder":4}],"courseId":1,"title":"Angular Full Course","description":"Comprehensive course covering Angular from basics to advanced topics.","price":199.99,"courseType":"Online","seatsAvailable":50,"duration":40.50,"categoryId":1,"instructorId":1,"instructorUserId":2,"thumbnail":null,"startDate":"2024-09-01T00:00:00","endDate":"2024-09-30T00:00:00","category":{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},"userRating":{"courseId":1,"averageRating":5.00,"totalRating":1}}
2025-06-06 13:17:04.286 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/Course/1 - 200 null application/json; charset=utf-8 369.1273ms
2025-06-06 13:17:14.700 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/CourseCategory/12 - null null
2025-06-06 13:17:14.708 +04:00 [INF] Request: GET /api/CourseCategory/12
2025-06-06 13:17:14.720 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:17:14.730 +04:00 [INF] Route matched with {action = "GetCoursesCategoriesById", controller = "CourseCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesCategoriesByIdAsync(Int32) on controller OnlineCourse.API.Controllers.CourseCategoryController (OnlineCourse.API).
2025-06-06 13:17:14.753 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API) in 14.5121ms
2025-06-06 13:17:14.766 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:17:35.281 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'OnlineCourse.Service.Services.ICategoryCourseService' while attempting to activate 'OnlineCourse.API.Controllers.CourseCategoryController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method263(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at OnlineCourse.API.Middleware.ResponseBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\ResponseBodyLoggingMiddleware.cs:line 17
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.LSC.OnlineCourse.API.Middlewares.RequestBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestBodyLoggingMiddleware.cs:line 35
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.RequestResponseLoggingMiddleware.Invoke(HttpContext context) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestResponseLoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-06 13:17:35.336 +04:00 [ERR] Unhandled exception occurred. System.InvalidOperationException: Unable to resolve service for type 'OnlineCourse.Service.Services.ICategoryCourseService' while attempting to activate 'OnlineCourse.API.Controllers.CourseCategoryController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method263(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at OnlineCourse.API.Middleware.ResponseBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\ResponseBodyLoggingMiddleware.cs:line 17
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.LSC.OnlineCourse.API.Middlewares.RequestBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestBodyLoggingMiddleware.cs:line 35
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.RequestResponseLoggingMiddleware.Invoke(HttpContext context) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestResponseLoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
System.InvalidOperationException: Unable to resolve service for type 'OnlineCourse.Service.Services.ICategoryCourseService' while attempting to activate 'OnlineCourse.API.Controllers.CourseCategoryController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method263(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at OnlineCourse.API.Middleware.ResponseBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\ResponseBodyLoggingMiddleware.cs:line 17
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.LSC.OnlineCourse.API.Middlewares.RequestBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestBodyLoggingMiddleware.cs:line 35
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.RequestResponseLoggingMiddleware.Invoke(HttpContext context) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestResponseLoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
2025-06-06 13:17:37.432 +04:00 [ERR] An exception was thrown attempting to execute the error handler.
System.ObjectDisposedException: Cannot access a closed Stream.
   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.MemoryStream.WriteAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask`1.GetTaskForValueTaskSource(IValueTaskSource`1 t)
--- End of stack trace from previous location ---
   at Program.<>c.<<Main>b__0_6>d.MoveNext() in D:\Sample\OnlineCourse.API\OnlineCourse.API\Program.cs:line 194
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
2025-06-06 13:17:37.442 +04:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'OnlineCourse.Service.Services.ICategoryCourseService' while attempting to activate 'OnlineCourse.API.Controllers.CourseCategoryController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method263(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at OnlineCourse.API.Middleware.ResponseBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\ResponseBodyLoggingMiddleware.cs:line 17
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.LSC.OnlineCourse.API.Middlewares.RequestBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestBodyLoggingMiddleware.cs:line 35
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.RequestResponseLoggingMiddleware.Invoke(HttpContext context) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestResponseLoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-06 13:17:37.466 +04:00 [ERR] An exception was thrown attempting to display the error page.
System.ObjectDisposedException: Cannot access a closed Stream.
   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.MemoryStream.WriteAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask`1.GetTaskForValueTaskSource(IValueTaskSource`1 t)
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.DisplayExceptionContent(ErrorContext errorContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-06-06 13:17:37.483 +04:00 [ERR] Connection id "0HND4R7L88A5B", Request id "0HND4R7L88A5B:00000004": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'OnlineCourse.Service.Services.ICategoryCourseService' while attempting to activate 'OnlineCourse.API.Controllers.CourseCategoryController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method263(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at OnlineCourse.API.Middleware.ResponseBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\ResponseBodyLoggingMiddleware.cs:line 17
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.LSC.OnlineCourse.API.Middlewares.RequestBodyLoggingMiddleware.InvokeAsync(HttpContext context, RequestDelegate next) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestBodyLoggingMiddleware.cs:line 35
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at OnlineCourse.API.Middleware.RequestResponseLoggingMiddleware.Invoke(HttpContext context) in D:\Sample\OnlineCourse.API\OnlineCourse.API\Middleware\RequestResponseLoggingMiddleware.cs:line 30
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.HandleException(HttpContext context, ExceptionDispatchInfo edi)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-06-06 13:17:37.508 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/CourseCategory/12 - 500 0 null 22807.7395ms
2025-06-06 13:17:42.252 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/CourseCategory/1 - null null
2025-06-06 13:17:42.260 +04:00 [INF] Request: GET /api/CourseCategory/1
2025-06-06 13:17:42.271 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:17:42.277 +04:00 [INF] Route matched with {action = "GetCoursesCategoriesById", controller = "CourseCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesCategoriesByIdAsync(Int32) on controller OnlineCourse.API.Controllers.CourseCategoryController (OnlineCourse.API).
2025-06-06 13:17:42.286 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API) in 1.772ms
2025-06-06 13:17:42.294 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:20:45.210 +04:00 [INF] Now listening on: http://localhost:5218
2025-06-06 13:20:45.403 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-06-06 13:20:45.410 +04:00 [INF] Hosting environment: Development
2025-06-06 13:20:45.432 +04:00 [INF] Content root path: D:\Sample\OnlineCourse.API\OnlineCourse.API
2025-06-06 13:20:46.415 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/swagger/index.html - null null
2025-06-06 13:20:46.538 +04:00 [INF] Request: GET /swagger/index.html
2025-06-06 13:20:46.689 +04:00 [INF] Response: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"OnlineCourse.API v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2025-06-06 13:20:46.729 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/swagger/index.html - 200 null text/html;charset=utf-8 346.7405ms
2025-06-06 13:20:46.841 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/_vs/browserLink - null null
2025-06-06 13:20:46.879 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/_framework/aspnetcore-browser-refresh.js - null null
2025-06-06 13:20:46.944 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 64.8781ms
2025-06-06 13:20:47.049 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/_vs/browserLink - 200 null text/javascript; charset=UTF-8 209.1673ms
2025-06-06 13:20:47.143 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/swagger/v1/swagger.json - null null
2025-06-06 13:20:47.157 +04:00 [INF] Request: GET /swagger/v1/swagger.json
2025-06-06 13:20:47.212 +04:00 [INF] Response: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "OnlineCourse.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Course": {
      "get": {
        "tags": [
          "Course"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/Category/{categoryId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/Detail/{courseId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Course/{id}": {
      "get": {
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CourseCategory/{id}": {
      "get": {
        "tags": [
          "CourseCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CourseCategory": {
      "get": {
        "tags": [
          "CourseCategory"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CourseCategoryModel": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CourseDetailModel": {
        "required": [
          "sessionDetails"
        ],
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "courseType": {
            "type": "string",
            "nullable": true
          },
          "seatsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorUserId": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/CourseCategoryModel"
          },
          "userRating": {
            "$ref": "#/components/schemas/UserRatingModel"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReviewModel"
            },
            "nullable": true
          },
          "sessionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionDetailModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CourseModel": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "courseType": {
            "type": "string",
            "nullable": true
          },
          "seatsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorId": {
            "type": "integer",
            "format": "int32"
          },
          "instructorUserId": {
            "type": "integer",
            "format": "int32"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/CourseCategoryModel"
          },
          "userRating": {
            "$ref": "#/components/schemas/UserRatingModel"
          }
        },
        "additionalProperties": false
      },
      "SessionDetailModel": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "videoUrl": {
            "type": "string",
            "nullable": true
          },
          "videoOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserRatingModel": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "totalRating": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserReviewModel": {
        "type": "object",
        "properties": {
          "reviewId": {
            "type": "integer",
            "format": "int32"
          },
          "courseId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2025-06-06 13:20:47.258 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 114.3547ms
2025-06-06 13:20:54.814 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/CourseCategory/2 - null null
2025-06-06 13:20:54.828 +04:00 [INF] Request: GET /api/CourseCategory/2
2025-06-06 13:20:54.863 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:20:54.906 +04:00 [INF] Route matched with {action = "GetCoursesCategoriesById", controller = "CourseCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesCategoriesByIdAsync(Int32) on controller OnlineCourse.API.Controllers.CourseCategoryController (OnlineCourse.API).
2025-06-06 13:20:55.146 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:20:58.409 +04:00 [INF] Executed DbCommand (291ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CategoryName], [c].[Description]
FROM [CourseCategory] AS [c]
WHERE [c].[CategoryId] = @__id_0
2025-06-06 13:20:58.620 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3461.7059ms.
2025-06-06 13:20:58.636 +04:00 [INF] Executing OkObjectResult, writing value of type 'OnlineCourse.Core.Models.CourseCategoryModel'.
2025-06-06 13:20:58.655 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API) in 3737.8868ms
2025-06-06 13:20:58.662 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesByIdAsync (OnlineCourse.API)'
2025-06-06 13:20:58.673 +04:00 [INF] Response: 200: {"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."}
2025-06-06 13:20:58.704 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/CourseCategory/2 - 200 null application/json; charset=utf-8 3890.333ms
2025-06-06 13:21:05.741 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/CourseCategory - null null
2025-06-06 13:21:05.778 +04:00 [INF] Request: GET /api/CourseCategory
2025-06-06 13:21:05.790 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API)'
2025-06-06 13:21:05.804 +04:00 [INF] Route matched with {action = "GetCoursesCategories", controller = "CourseCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesCategoriesAsync() on controller OnlineCourse.API.Controllers.CourseCategoryController (OnlineCourse.API).
2025-06-06 13:21:05.813 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:21:06.071 +04:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CategoryName], [c].[Description]
FROM [CourseCategory] AS [c]
2025-06-06 13:21:06.080 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 259.6802ms.
2025-06-06 13:21:06.088 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[OnlineCourse.Core.Models.CourseCategoryModel, OnlineCourse.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-06 13:21:06.096 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API) in 285.6913ms
2025-06-06 13:21:06.103 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API)'
2025-06-06 13:21:06.110 +04:00 [INF] Response: 200: [{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},{"categoryId":4,"categoryName":"Web Development","description":"Courses focusing on front-end and back-end web development."},{"categoryId":5,"categoryName":"Cybersecurity","description":"Courses covering security practices and ethical hacking."},{"categoryId":6,"categoryName":"Project Management","description":"Courses on managing projects, teams, and resources effectively."},{"categoryId":7,"categoryName":"Marketing","description":"Courses focused on digital marketing, SEO, and social media marketing."},{"categoryId":8,"categoryName":"Finance","description":"Courses covering investment, personal finance, and accounting."},{"categoryId":9,"categoryName":"Health & Fitness","description":"Courses on physical fitness, mental well-being, and nutrition."}]
2025-06-06 13:21:06.118 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/CourseCategory - 200 null application/json; charset=utf-8 377.4958ms
2025-06-06 13:21:07.461 +04:00 [INF] Request starting HTTP/1.1 GET http://localhost:5218/api/CourseCategory - null null
2025-06-06 13:21:07.470 +04:00 [INF] Request: GET /api/CourseCategory
2025-06-06 13:21:07.480 +04:00 [INF] Executing endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API)'
2025-06-06 13:21:07.489 +04:00 [INF] Route matched with {action = "GetCoursesCategories", controller = "CourseCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCoursesCategoriesAsync() on controller OnlineCourse.API.Controllers.CourseCategoryController (OnlineCourse.API).
2025-06-06 13:21:07.501 +04:00 [INF] Executing action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API) - Validation state: "Valid"
2025-06-06 13:21:07.762 +04:00 [INF] Executed DbCommand (252ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CategoryName], [c].[Description]
FROM [CourseCategory] AS [c]
2025-06-06 13:21:07.775 +04:00 [INF] Executed action method OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 267.7822ms.
2025-06-06 13:21:07.783 +04:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[OnlineCourse.Core.Models.CourseCategoryModel, OnlineCourse.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-06-06 13:21:07.792 +04:00 [INF] Executed action OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API) in 296.213ms
2025-06-06 13:21:07.800 +04:00 [INF] Executed endpoint 'OnlineCourse.API.Controllers.CourseCategoryController.GetCoursesCategoriesAsync (OnlineCourse.API)'
2025-06-06 13:21:07.809 +04:00 [INF] Response: 200: [{"categoryId":1,"categoryName":"Programming","description":"Courses related to software development and programming languages."},{"categoryId":2,"categoryName":"Data Science","description":"Courses covering data analysis, machine learning, and AI."},{"categoryId":3,"categoryName":"Design","description":"Courses related to graphic design, UX/UI, and creative fields."},{"categoryId":4,"categoryName":"Web Development","description":"Courses focusing on front-end and back-end web development."},{"categoryId":5,"categoryName":"Cybersecurity","description":"Courses covering security practices and ethical hacking."},{"categoryId":6,"categoryName":"Project Management","description":"Courses on managing projects, teams, and resources effectively."},{"categoryId":7,"categoryName":"Marketing","description":"Courses focused on digital marketing, SEO, and social media marketing."},{"categoryId":8,"categoryName":"Finance","description":"Courses covering investment, personal finance, and accounting."},{"categoryId":9,"categoryName":"Health & Fitness","description":"Courses on physical fitness, mental well-being, and nutrition."}]
2025-06-06 13:21:07.820 +04:00 [INF] Request finished HTTP/1.1 GET http://localhost:5218/api/CourseCategory - 200 null application/json; charset=utf-8 359.0272ms
